{"version":3,"file":"static/js/575.9369287f.chunk.js","mappings":"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","sources":["webpack://freshcartapp/./src/Components/Register/Register.module.scss?f38f","Components/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-color\":\"Register_main-color__qsgLG\",\"bg-main\":\"Register_bg-main__IOKMR\",\"sectionBg\":\"Register_sectionBg__7lbtz\",\"btn-main\":\"Register_btn-main__Ga5Z8\",\"register\":\"Register_register__t4W7l\",\"background\":\"Register_background__4RWpl\",\"inputContainer\":\"Register_inputContainer__hkNcw\"};","import React from \"react\";\r\nimport styles from \"./Register.module.scss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default function Register() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rePassword: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .min(3, \"Name must be at least 3 characters\")\r\n      .max(15, \"Name must be at most 15 characters\")\r\n      .required(\"Please enter your name\"),\r\n\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Please enter your email\"),\r\n\r\n    password: Yup.string()\r\n      .matches(/^[A-Z][A-Za-z0-9]{8,16}/, \"Invalid Password\")\r\n      .required(\"Please enter your password\"),\r\n\r\n    rePassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\")], \"Re-Passwords must match Password\")\r\n      .required(\"Re-Password is required\"),\r\n\r\n    phone: Yup.string()\r\n      .matches(/^01[0125][0-9]{8}$/, \"Invalid Phone number\")\r\n      .required(\"please enter your phone number\"),\r\n  });\r\n\r\n  async function handelRegister(values) {\r\n    setLoading(true);\r\n\r\n    await axios\r\n      .post(\"https://ecommerce.routemisr.com/api/v1/auth/signup\", values)\r\n      .then((res) => {\r\n        if (res.data.message === \"success\") {\r\n          setLoading(false);\r\n          setError(null);\r\n          setSuccess(true);\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError(err.response.data.message);\r\n      });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      handelRegister(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n\r\n<Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Sign Up</title>\r\n      </Helmet>\r\n\r\n      <section id={styles.register} className=\"min-vh-100 overflow-x-hidden\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\"></div>\r\n\r\n          <div\r\n            id={styles.background}\r\n            className=\"col-md-6 min-vh-100 pt-5 pb-4 rounded-start-5 shadow\"\r\n          >\r\n            <div className=\"container pt-4 px-4\">\r\n              <h2 className=\"display-6 fw-bolder main-color mt-2 mb-1\">\r\n                Welcome, Let's Get Started!\r\n              </h2>\r\n              <h3 className=\"fw-bold mb-2\">Create your account.</h3>\r\n              <p className=\"text-muted w-75 mb-4\">\r\n                \"Welcome to FreshCart, Sign up now to explore a world of\r\n                shopping convenience and endless possibilities.\"\r\n              </p>\r\n\r\n              <form\r\n                onSubmit={formik.handleSubmit}\r\n                className=\"form-group d-flex flex-column justify-content-center pt-2\"\r\n              >\r\n                {/* Name */}\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"User Name\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.name}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"name\">User Name</label>\r\n\r\n                  {formik.touched.name && formik.errors.name && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.name}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Email */}\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"User Email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"email\">User Email</label>\r\n\r\n                  {formik.touched.email && formik.errors.email && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.email}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"Password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"password\">Password</label>\r\n\r\n                  {formik.touched.password && formik.errors.password && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.password}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Re-Password */}\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    id=\"rePassword\"\r\n                    name=\"rePassword\"\r\n                    type=\"password\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"Re-Password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.rePassword}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"rePassword\">Re-Password</label>\r\n\r\n                  {formik.touched.rePassword && formik.errors.rePassword && (\r\n                    <span className=\"text-danger\">\r\n                      {\" \"}\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.rePassword}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Phone Number */}\r\n                <div className={`mb-3 ${styles.inputContainer}`}>\r\n                  <input\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    type=\"tel\"\r\n                    autoComplete=\"off\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.phone}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"phone\">Phone Number</label>\r\n\r\n                  {formik.touched.phone && formik.errors.phone && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.phone}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                <button\r\n                  id=\"btn-main\"\r\n                  className=\"btn mt-4 w-50 align-self-center rounded-3 shadow-sm\"\r\n                  type=\"submit\"\r\n                  disabled={!(formik.isValid && formik.dirty)}\r\n                >\r\n                  {loading ? (\r\n                    <i className=\"fa-solid fa-spinner fa-spin-pulse\"></i>\r\n                  ) : (\r\n                    \"Sign Up\"\r\n                  )}\r\n                </button>\r\n\r\n                {error && (\r\n                  <div className=\"text-danger text-center mt-2\">\r\n                    <i className=\"fa-solid fa-circle-exclamation\"></i> {error}\r\n                  </div>\r\n                )}\r\n\r\n                {success && (\r\n                  <div className=\"main-color text-center mt-2\">\r\n                    <i className=\"fa-solid fa-circle-check\"></i> you have been\r\n                    registered successfully\r\n                  </div>\r\n                )}\r\n\r\n                <p className=\"mt-2 text-center\">\r\n                  Already have an account?{\" \"}\r\n                  <Link\r\n                    to=\"/login\"\r\n                    className=\"text-decoration-none main-color fw-semibold\"\r\n                  >\r\n                    Login\r\n                  </Link>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Register","loading","setLoading","useState","error","setError","success","setSuccess","navigate","useNavigate","validationSchema","Yup","name","min","max","required","email","password","matches","rePassword","oneOf","phone","formik","useFormik","initialValues","onSubmit","values","async","axios","post","then","res","data","message","setTimeout","catch","err","response","handelRegister","_jsxs","_Fragment","children","Helmet","_jsx","charSet","id","styles","register","className","background","handleSubmit","inputContainer","type","autoComplete","placeholder","onChange","handleChange","value","onBlur","handleBlur","htmlFor","touched","errors","concat","disabled","isValid","dirty","Link","to"],"sourceRoot":""}