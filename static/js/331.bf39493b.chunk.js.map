{"version":3,"file":"static/js/331.bf39493b.chunk.js","mappings":"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","sources":["webpack://freshcartapp/./src/Components/Login/Login.module.scss?f8f8","Components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-color\":\"Login_main-color__vohs4\",\"bg-main\":\"Login_bg-main__NIUPG\",\"sectionBg\":\"Login_sectionBg__hdHsT\",\"btn-main\":\"Login_btn-main__ilo0B\",\"login\":\"Login_login__QMWFF\",\"background\":\"Login_background__90JGU\",\"inputContainer\":\"Login_inputContainer__qKDiO\"};","import React, { useContext } from \"react\";\r\nimport styles from \"./Login.module.scss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Login() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { setToken } = useContext(AuthContext);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Please enter your email\"),\r\n\r\n    password: Yup.string()\r\n      .matches(/^[A-Z][A-Za-z0-9]{8,16}/, \"Invalid Password\")\r\n      .required(\"Please enter your password\"),\r\n  });\r\n\r\n  async function handelLogin(values) {\r\n    setLoading(true);\r\n\r\n    await axios\r\n      .post(\"https://ecommerce.routemisr.com/api/v1/auth/signin\", values)\r\n      .then((res) => {\r\n        if (res.data.message === \"success\") {\r\n          setLoading(false);\r\n          setError(null);\r\n          navigate(\"/\");\r\n          setToken(res.data.token);\r\n          localStorage.setItem(\"token\", res.data.token);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError(err.response.data.message);\r\n      });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      handelLogin(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Login</title>\r\n      </Helmet>\r\n\r\n      <section id={styles.login} className=\"min-vh-100 overflow-x-hidden\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\"></div>\r\n\r\n          <div\r\n            id={styles.background}\r\n            className=\"col-md-6 min-vh-100 pt-5 pb-4 rounded-start-5 shadow\"\r\n          >\r\n            <div className=\"container pt-4 px-4\">\r\n              <h2 className=\"display-6 fw-bolder main-color mt-4 mb-2\">\r\n                Hello, Welcome back!\r\n              </h2>\r\n              <h3 className=\"fw-bold mb-5\">Login to your account.</h3>\r\n\r\n              <form\r\n                onSubmit={formik.handleSubmit}\r\n                className=\"form-group d-flex flex-column justify-content-center pt-2\"\r\n              >\r\n                {/* Email */}\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"User Email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"email\">User Email</label>\r\n\r\n                  {formik.touched.email && formik.errors.email && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.email}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div className={`mb-1 ${styles.inputContainer}`}>\r\n                  <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control border-0 shadow-sm py-2 rounded-3\"\r\n                    placeholder=\"Password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <label htmlFor=\"password\">Password</label>\r\n\r\n                  {formik.touched.password && formik.errors.password && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"fa-solid fa-circle-exclamation\"></i>{\" \"}\r\n                      {formik.errors.password}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                <Link\r\n                  to=\"/forget-password\"\r\n                  className=\"text-decoration-none main-color fw-semibold text-end mt-1\"\r\n                >\r\n                  forget your password?\r\n                </Link>\r\n\r\n                <button\r\n                  id=\"btn-main\"\r\n                  className=\"btn mt-4 w-50 align-self-center rounded-3 shadow-sm\"\r\n                  type=\"submit\"\r\n                  disabled={!(formik.isValid && formik.dirty)}\r\n                >\r\n                  {loading ? (\r\n                    <i className=\"fa-solid fa-spinner fa-spin-pulse\"></i>\r\n                  ) : (\r\n                    \"Login\"\r\n                  )}\r\n                </button>\r\n\r\n                {error && (\r\n                  <div className=\"text-danger text-center mt-2\">\r\n                    <i className=\"fa-solid fa-circle-exclamation\"></i> {error}\r\n                  </div>\r\n                )}\r\n\r\n                <p className=\"mt-2 text-center\">\r\n                  Don't have an account?{\" \"}\r\n                  <Link\r\n                    to=\"/register\"\r\n                    className=\"text-decoration-none main-color fw-semibold\"\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Login","loading","setLoading","useState","error","setError","navigate","useNavigate","setToken","useContext","AuthContext","validationSchema","Yup","email","required","password","matches","formik","useFormik","initialValues","onSubmit","values","async","axios","post","then","res","data","message","token","localStorage","setItem","catch","err","response","handelLogin","_jsxs","_Fragment","children","Helmet","_jsx","charSet","id","styles","login","className","background","handleSubmit","inputContainer","name","type","autoComplete","placeholder","onChange","handleChange","value","onBlur","handleBlur","htmlFor","touched","errors","concat","Link","to","disabled","isValid","dirty"],"sourceRoot":""}